asymmetric_obs: false
method: joint # possible options: joint (ours), no_inductive_reward, inductive_reward, uniform_random_contact
randomize_initial_joint_position: True
params:
  seed: ${...seed}
  algo:
    name: a2c_continuous
  model:
    name: continuous_a2c_logstd
  network:
    name: actor_critic
    separate: False
    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: 0
        fixed_sigma: true
    mlp:
      units: [512, 256, 256, 128]
      activation: elu
      d2rl: False
      initializer:
        name: default
      regularizer:
        name: None
      finger_points: 8
      object_points: 32
  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load
  config:
    pre_batch: 24576
    name: ${resolve_default:Domain,${....experiment}}
    #full_experiment_name: ${.name}
    env_name: rlgpu
    multi_gpu: false
    ppo: true
    mixed_precision: false
    normalize_input: true
    normalize_value: true
    reward_shaper:
      scale_value: 1.0
    normalize_advantage: true
    gamma: 0.99
    tau: 0.95
    learning_rate: 5e-4
    lr_schedule: adaptive
    schedule_type: standard
    use_experimental_cv: true
    kl_threshold: 0.016
    score_to_win: 1000000
    max_epochs: ${resolve_default:40000,${....max_iterations}}
    save_best_after: 200
    save_frequency: 50
    print_stats: true
    grad_norm: 1.0
    entropy_coef: 0.0
    truncate_grads: true
    e_clip: 0.2
    horizon_length: 8
    minibatch_size: ${.num_actors}
    mini_epochs: 8
    critic_coef: 4
    clip_value: true
    seq_len: 4
    bounds_loss_coef: 0.0001
    joint: 
      activate: ${eq:${....method},"joint"}
      analytical_ik: True
      pi_O: False
      seperate: True
    #tau: 1.0
    
    player:
      deterministic: true
      games_num: 1000000
      print_stats: false
    num_actors: ${....task.env.numEnvs}
